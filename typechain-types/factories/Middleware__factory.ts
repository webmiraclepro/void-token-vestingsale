/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Middleware, MiddlewareInterface } from "../Middleware";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "getArrayLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "sellTime",
        type: "uint64",
      },
    ],
    name: "getSellFeeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "sellFeeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getTotalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "refreshArray",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "buytime",
        type: "uint64",
      },
    ],
    name: "setBuytimeToAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "sellTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "buyTime",
        type: "uint64",
      },
    ],
    name: "vestingSaleSchedule",
    outputs: [
      {
        internalType: "uint256",
        name: "discountRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052610bb86000556127106001556101f460025534801561002257600080fd5b50610a7b806100326000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063ab51b62311610050578063ab51b623146100e7578063d2733704146100fa578063f596e8d51461010d57600080fd5b80630e13b9bd146100775780634c4590b31461009c5780634d5acf34146100d2575b600080fd5b61008a61008536600461084e565b6101ba565b60405190815260200160405180910390f35b61008a6100aa36600461084e565b73ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205490565b6100e56100e036600461084e565b610236565b005b61008a6100f53660046108a5565b61043e565b61008a610108366004610869565b610536565b6100e561011b366004610869565b73ffffffffffffffffffffffffffffffffffffffff929092166000908152600560209081526040808320815180830183528481528301849052815180830190925267ffffffffffffffff958616825281830194855280546001808201835591855292909320905160029092020180547fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000016919094161783559051910155565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260056020526040812081805b825481101561022e578281815481106101fd576101fd610a16565b9060005260206000209060020201600101548261021a91906108d8565b9150806102268161097f565b9150506101e2565b509392505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526005602052604090205b8060008154811061026f5761026f610a16565b9060005260206000209060020201600101546000141561043a57805461029790600190610968565b61030e57808054806102ab576102ab6109e7565b60008281526020812060027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9093019283020180547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001681556001015590555050565b60005b815461031f90600190610968565b8110156103c557816103328260016108d8565b8154811061034257610342610a16565b906000526020600020906002020182828154811061036257610362610a16565b60009182526020909120825460029092020180547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff909216919091178155600191820154910155806103bd8161097f565b915050610311565b50808054806103d6576103d66109e7565b60008281526020812060027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9093019283020180547fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000016815560010155905561025c565b5050565b60008167ffffffffffffffff168367ffffffffffffffff1610156104c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4d573a62757954696d65206f766572000000000000000000000000000000000060448201526064015b60405180910390fd5b60006104e9620151806104e367ffffffffffffffff8781169087166107e2565b906107f5565b905060078160ff16106104fe5760015461052e565b61052e61052561051c8360ff1660025461080190919063ffffffff16565b600054906107e2565b600154906107e2565b949350505050565b60008083116105a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4d573a20616d6f756e74206973207a65726f000000000000000000000000000060448201526064016104ba565b60006105ac856101ba565b905083811015610618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4d573a20616d6f756e74206973206f76657220746f74616c416d6f756e74000060448201526064016104ba565b73ffffffffffffffffffffffffffffffffffffffff851660009081526005602052604081209085815b81156107c2578184828154811061065a5761065a610a16565b90600052602060002090600202016001015410610701576106b76001546106ad8987858154811061068d5761068d610a16565b600091825260209091206002909102015467ffffffffffffffff1661043e565b6104e3908561092b565b6106c190846108d8565b9250818482815481106106d6576106d6610a16565b906000526020600020906002020160010160008282546106f69190610968565b909155506107c29050565b61074b60015461071d8987858154811061068d5761068d610a16565b86848154811061072f5761072f610a16565b9060005260206000209060020201600101546104e3919061092b565b61075590846108d8565b925083818154811061076957610769610a16565b906000526020600020906002020160010154826107869190610968565b9150600084828154811061079c5761079c610a16565b6000918252602090912060016002909202010155806107ba8161097f565b915050610641565b6107cb89610236565b6107d588846107e2565b9998505050505050505050565b60006107ee8284610968565b9392505050565b60006107ee82846108f0565b60006107ee828461092b565b803573ffffffffffffffffffffffffffffffffffffffff8116811461083157600080fd5b919050565b803567ffffffffffffffff8116811461083157600080fd5b60006020828403121561086057600080fd5b6107ee8261080d565b60008060006060848603121561087e57600080fd5b6108878461080d565b92506020840135915061089c60408501610836565b90509250925092565b600080604083850312156108b857600080fd5b6108c183610836565b91506108cf60208401610836565b90509250929050565b600082198211156108eb576108eb6109b8565b500190565b600082610926577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610963576109636109b8565b500290565b60008282101561097a5761097a6109b8565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109b1576109b16109b8565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220a0a2dd032d7f052cee11eebdb10735b3fe34abec10b60f15d8ea5146a4df87ce64736f6c63430008070033";

type MiddlewareConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MiddlewareConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Middleware__factory extends ContractFactory {
  constructor(...args: MiddlewareConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Middleware";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Middleware> {
    return super.deploy(overrides || {}) as Promise<Middleware>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Middleware {
    return super.attach(address) as Middleware;
  }
  connect(signer: Signer): Middleware__factory {
    return super.connect(signer) as Middleware__factory;
  }
  static readonly contractName: "Middleware";
  public readonly contractName: "Middleware";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MiddlewareInterface {
    return new utils.Interface(_abi) as MiddlewareInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Middleware {
    return new Contract(address, _abi, signerOrProvider) as Middleware;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Middleware, MiddlewareInterface } from "../Middleware";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "getArrayLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "sellTime",
        type: "uint64",
      },
    ],
    name: "getSellFeeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "sellFeeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getTotalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "refreshArray",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "buytime",
        type: "uint64",
      },
    ],
    name: "setBuytimeToAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "sellTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "buyTime",
        type: "uint64",
      },
    ],
    name: "vestingSaleSchedule",
    outputs: [
      {
        internalType: "uint256",
        name: "discountRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052610bb86000556127106001556101f460025534801561002257600080fd5b50610aa7806100326000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063ab51b62311610050578063ab51b623146100e7578063d2733704146100fa578063f596e8d51461010d57600080fd5b80630e13b9bd146100775780634c4590b31461009c5780634d5acf34146100d2575b600080fd5b61008a6100853660046107ff565b610120565b60405190815260200160405180910390f35b61008a6100aa3660046107ff565b73ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205490565b6100e56100e03660046107ff565b61019c565b005b61008a6100f5366004610856565b6103a4565b61008a61010836600461081a565b61049c565b6100e561011b36600461081a565b61060f565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260056020526040812081805b82548110156101945782818154811061016357610163610a42565b906000526020600020906002020160010154826101809190610904565b91508061018c816109ab565b915050610148565b509392505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526005602052604090205b806000815481106101d5576101d5610a42565b906000526020600020906002020160010154600014156103a05780546101fd90600190610994565b610274578080548061021157610211610a13565b60008281526020812060027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9093019283020180547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001681556001015590555050565b60005b815461028590600190610994565b81101561032b5781610298826001610904565b815481106102a8576102a8610a42565b90600052602060002090600202018282815481106102c8576102c8610a42565b60009182526020909120825460029092020180547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff90921691909117815560019182015491015580610323816109ab565b915050610277565b508080548061033c5761033c610a13565b60008281526020812060027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9093019283020180547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001681556001015590556101c2565b5050565b60008167ffffffffffffffff168367ffffffffffffffff161015610429576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4d573a62757954696d65206f766572000000000000000000000000000000000060448201526064015b60405180910390fd5b600061044f6201518061044967ffffffffffffffff8781169087166106e6565b906106f9565b905060078160ff161061046457600154610494565b61049461048b6104828360ff1660025461070590919063ffffffff16565b600054906106e6565b600154906106e6565b949350505050565b6000808311610507576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4d573a20616d6f756e74206973207a65726f00000000000000000000000000006044820152606401610420565b600061051285610120565b90508381101561052157600091505b8381101561058b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4d573a20616d6f756e74206973206f76657220746f74616c416d6f756e7400006044820152606401610420565b73ffffffffffffffffffffffffffffffffffffffff851660009081526005602090815260408083208151808301909252600d82527f73656c6c466565416d6f756e740000000000000000000000000000000000000092820192909252909190869082906105f89087610711565b61060288846106e6565b9998505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526005602090815260408083208151808301835267ffffffffffffffff868116825281850188815283546001808201865585895297879020845160029092020180547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001691909316178255519501949094558151808301909252600a82527f73657442757954696d65000000000000000000000000000000000000000000009282019290925281549192916106df9190610711565b5050505050565b60006106f28284610994565b9392505050565b60006106f2828461091c565b60006106f28284610957565b6103a08282604051602401610727929190610889565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9710a9d00000000000000000000000000000000000000000000000000000000017905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146107e257600080fd5b919050565b803567ffffffffffffffff811681146107e257600080fd5b60006020828403121561081157600080fd5b6106f2826107be565b60008060006060848603121561082f57600080fd5b610838846107be565b92506020840135915061084d604085016107e7565b90509250925092565b6000806040838503121561086957600080fd5b610872836107e7565b9150610880602084016107e7565b90509250929050565b604081526000835180604084015260005b818110156108b7576020818701810151606086840101520161089a565b818111156108c9576000606083860101525b50602083019390935250601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601606001919050565b60008219821115610917576109176109e4565b500190565b600082610952577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561098f5761098f6109e4565b500290565b6000828210156109a6576109a66109e4565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109dd576109dd6109e4565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122060973ba1047f027258da8e7a0079ee8a58983fec7d598b14175eab4bcf059bf364736f6c63430008070033";

type MiddlewareConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MiddlewareConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Middleware__factory extends ContractFactory {
  constructor(...args: MiddlewareConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Middleware";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Middleware> {
    return super.deploy(overrides || {}) as Promise<Middleware>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Middleware {
    return super.attach(address) as Middleware;
  }
  connect(signer: Signer): Middleware__factory {
    return super.connect(signer) as Middleware__factory;
  }
  static readonly contractName: "Middleware";
  public readonly contractName: "Middleware";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MiddlewareInterface {
    return new utils.Interface(_abi) as MiddlewareInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Middleware {
    return new Contract(address, _abi, signerOrProvider) as Middleware;
  }
}
